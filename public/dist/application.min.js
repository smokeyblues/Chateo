"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){if(void 0!==Authentication.user.roles&&Authentication.user.roles.indexOf(role)!==-1)return allowed=!0,!0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("chat");
"use strict";ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.user",["core"]),ApplicationConfiguration.registerModule("core.user.routes",["ui.router"]);
!function(app){"use strict";app.registerModule("friends")}(ApplicationConfiguration);
"use strict";ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),ApplicationConfiguration.registerModule("users.user",["core"]),ApplicationConfiguration.registerModule("users.user",["core.user"]),ApplicationConfiguration.registerModule("users.user.routes",["core.user.routes"]);
"use strict";angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat"})}]);
"use strict";angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/client/views/chat.client.view.html",data:{roles:["user","admin"]}})}]);
"use strict";angular.module("chat").controller("ChatController",["$scope","$location","Authentication","Socket",function($scope,$location,Authentication,Socket){$scope.messages=[],Authentication.user||$location.path("/"),Socket.socket||Socket.connect(),Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]);
"use strict";angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]);
"use strict";angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]);
"use strict";angular.module("core.user").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"user",state:"user",type:"dropdown",roles:["user"]})}]);
"use strict";angular.module("core.user.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("user",{"abstract":!0,url:"/user",template:"<ui-view/>",data:{roles:["user"]}})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return reset()}),toggleClasses=function(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(attrs.showErrors.indexOf("skipFormGroupCheck")===-1&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("friends",{"abstract":!0,url:"/friends",template:"<ui-view/>"}).state("friends.list",{url:"",templateUrl:"modules/friends/client/views/list-friends.client.view.html",controller:"FriendsListController",controllerAs:"vm",data:{pageTitle:"Friends List"}}).state("friends.create",{url:"/create",templateUrl:"modules/friends/client/views/form-friend.client.view.html",controller:"FriendsController",controllerAs:"vm",resolve:{friendResolve:newFriend},data:{roles:["user","admin"],pageTitle:"Friends Create"}}).state("friends.edit",{url:"/:friendId/edit",templateUrl:"modules/friends/client/views/form-friend.client.view.html",controller:"FriendsController",controllerAs:"vm",resolve:{friendResolve:getFriend},data:{roles:["user","admin"],pageTitle:"Edit Friend {{ friendResolve.name }}"}}).state("friends.view",{url:"/:friendId",templateUrl:"modules/friends/client/views/view-friend.client.view.html",controller:"FriendsController",controllerAs:"vm",resolve:{friendResolve:getFriend},data:{pageTitle:"Friend {{ articleResolve.name }}"}})}function getFriend($stateParams,FriendsService){return FriendsService.get({friendId:$stateParams.friendId}).$promise}function newFriend(FriendsService){return new FriendsService}angular.module("friends").config(routeConfig),routeConfig.$inject=["$stateProvider"],getFriend.$inject=["$stateParams","FriendsService"],newFriend.$inject=["FriendsService"]}();
!function(){"use strict";function FriendsController($scope,$state,Authentication,friend){function remove(){confirm("Are you sure you want to delete?")&&vm.friend.$remove($state.go("friends.list"))}function save(isValid){function successCallback(res){$state.go("friends.view",{friendId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.friend._id?vm.friend.$update(successCallback,errorCallback):vm.friend.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.friendForm"),!1)}var vm=this;vm.authentication=Authentication,vm.friend=friend,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("friends").controller("FriendsController",FriendsController),FriendsController.$inject=["$scope","$state","Authentication","friendResolve"]}();
!function(){"use strict";function FriendsListController(FriendsService){var vm=this;vm.friends=FriendsService.query()}angular.module("friends").controller("FriendsListController",FriendsListController),FriendsListController.$inject=["FriendsService"]}();
!function(){"use strict";function FriendsService($resource){return $resource("api/friends/:friendId",{friendId:"@_id"},{update:{method:"PUT"}})}angular.module("friends").factory("FriendsService",FriendsService),FriendsService.$inject=["$resource"]}();
"use strict";angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]);
"use strict";angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]);
"use strict";angular.module("users.user.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("user.users",{url:"/users",templateUrl:"modules/users/client/views/user/user-directory.client.view.html",controller:"UserDirectoryController"})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","Socket","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,Socket,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]);
"use strict";angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]);
"use strict";angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}}}]);
"use strict";angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}});
"use strict";angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]);
"use strict";angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]);
"use strict";angular.module("users").factory("User",["$resource",function($resource){return $resource("api/userDirectory",{},{update:{method:"PUT"}})}]),angular.module("users.user").factory("User",["$resource",function($resource){return $resource("api/userDirectory/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").factory("Admin",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]);
"use strict";angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]);
"use strict";angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]);
"use strict";angular.module("users.user").controller("goChatController",["$scope","$location","User",function($scope,$location,User){$scope.goChat=function(){$location.url("https://meet.jit.si/"+$scope.authentication.user.username+"calls"+$scope.user.username)}}]);
"use strict";angular.module("users.user").controller("UserDirectoryController",["$scope","$filter","User",function($scope,$filter,User){User.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedSearchItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedSearchItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]);
!function(){"use strict";function templates($templateCache){$templateCache.put("modules/chat/views/chat.client.view.html",'<!-- The chat view -->\n<section class="container" ng-controller="ChatController">\n  <div class="page-header">\n    <h1>Chat Example</h1>\n  </div>\n  <!-- The message form -->\n  <form class="col-xs-12 col-md-offset-4 col-md-4" ng-submit="sendMessage();">\n    <fieldset class="row">\n      <div class="input-group">\n        <input type="text" id="messageText" name="messageText" class="form-control" ng-model="messageText" placeholder="Enter new message">\n        <span class="input-group-btn">\n          <button type="submit" class="btn btn-primary" ng-disabled="!messageText.length">Submit</button>\n        </span>\n      </div>\n    </fieldset>\n  </form>\n  <ul class="list-unstyled">\n    <!-- List all messages -->\n    <li class="col-xs-12 col-md-offset-4 col-md-4 chat-message" ng-repeat="message in messages">\n      <small class="pull-right text-muted" ng-bind="message.created | date:\'mediumTime\'"></small>\n      <img ng-src="{{message.profileImageURL}}" alt="{{message.username}}" class="pull-left chat-profile-image" />\n      <div class="pull-left chat-message-details">\n        <strong ng-bind="message.username"></strong>\n        <br>\n        <span ng-bind="message.text"></span>\n      </div>\n    </li>\n  </ul>\n</section>\n'),$templateCache.put("modules/core/views/400.client.view.html",'<h1>Bad Request</h1>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You made a bad request\n</div>\n'),$templateCache.put("modules/core/views/403.client.view.html",'<h1>Forbidden</h1>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You are not authorized to access this resource\n</div>\n'),$templateCache.put("modules/core/views/404.client.view.html",'<h1>Page Not Found</h1>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span> Page Not Found\n</div>\n'),$templateCache.put("modules/core/views/footer.client.view.html",'<div class="container-fluid navbar-fixed-bottom footer text-center" style="background-color:black; color:white;">\n  <strong>Chateo.com &copy 2016</strong>\n</div>\n'),$templateCache.put("modules/core/views/header.client.view.html",'<div class="container" ng-controller="HeaderController">\n\n  <link href="https://fonts.googleapis.com/css?family=Righteous" rel="stylesheet">\n\n  <div class="navbar-header">\n    <button class="navbar-toggle" type="button" ng-click="toggleCollapsibleMenu()">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n    </button>\n    <a ui-sref="home" class="navbar-brand" style="font-family: \'Righteous\', cursive; color:red; font-size:200%">Chateo</a>\n  </div>\n  <nav class="collapse navbar-collapse" collapse="!isCollapsed" role="navigation">\n    <ul class="nav navbar-nav" ng-if="menu.shouldRender(authentication.user);" ng-hide="user.roles=\'admin\'">\n      <li ng-repeat="item in menu.items | orderBy: \'position\'" ng-if="item.shouldRender(authentication.user);" ng-switch="item.type" ng-class="{ active: $state.includes(item.state), dropdown: item.type === \'dropdown\' }" class="{{item.class}}" dropdown="item.type === \'dropdown\'">\n        <a ng-switch-when="dropdown" class="dropdown-toggle" dropdown-toggle role="button">{{::item.title}}&nbsp;<span class="caret"></span></a>\n        <ul ng-switch-when="dropdown" class="dropdown-menu">\n          <li ng-repeat="subitem in item.items | orderBy: \'position\'" ng-if="subitem.shouldRender(authentication.user);" ui-sref-active="active">\n            <a ui-sref="{{subitem.state}}" ng-bind="subitem.title"></a>\n          </li>\n        </ul>\n        <a ng-switch-default ui-sref="{{item.state}}" ng-bind="item.title"></a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-hide="authentication.user">\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signup">Sign Up</a>\n      </li>\n      <li class="divider-vertical"></li>\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signin">Sign In</a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-show="authentication.user">\n      <li class="dropdown" dropdown>\n        <a class="dropdown-toggle user-header-dropdown-toggle" dropdown-toggle role="button">\n          <img ng-src="{{authentication.user.profileImageURL}}" alt="{{authentication.user.displayName}}" class="header-profile-image" />\n          <span ng-bind="authentication.user.displayName"></span> <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu" role="menu">\n          <li ui-sref-active="active">\n            <a ui-sref="settings.profile">Edit Profile</a>\n          </li>\n          <li ui-sref-active="active">\n            <a ui-sref="settings.picture">Change Profile Picture</a>\n          </li>\n          <li ui-sref-active="active" ng-show="authentication.user.provider === \'local\'">\n            <a ui-sref="settings.password">Change Password</a>\n          </li>\n          <li ui-sref-active="active">\n            <a ui-sref="settings.accounts">Manage Social Accounts</a>\n          </li>\n          <li class="divider"></li>\n          <li>\n            <a href="/api/auth/signout" target="_self">Signout</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</div>\n'),$templateCache.put("modules/core/views/home.client.view.html",'<section ng-controller="HomeController">\n\n  </div>\n  <div class="jumbotron text-center bg-primary" ng-hide="authentication.user" style="background-color: white;">\n    <div class="row">\n      <div class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12" >\n        <img alt="Chateo" class="img-responsive text-center" src="modules/core/client/img/brand/ChateoLogo.png" />\n      </div>\n    </div>\n    <br>\n    <div class="row">\n      <p class="lead">\n        An app to connect seniors to family and loved ones\n      </p>\n    </div>\n    <div class="row">\n      <p>\n        <!-- <a class="btn btn-primary btn-lg" href="http://meanjs.org" target="_blank">Learn more</a> -->\n      </p>\n    </div>\n  </div>\n  <div ng-if="authentication.user">\n    <!-- <h1>Congratulations! You are logged in.</h1> -->\n    <!-- <p>\n      Search for a person you would like to chateo with\n    </p> -->\n    <div ng-include="\'/modules/users/client/views/user/user-directory.client.view.html\'"></div>\n    <!-- <div ng-include="\'/api/users\'"></div> -->\n\n  </div>\n\n</section>\n'),$templateCache.put("modules/friends/views/form-friend.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.friend._id ? \'Edit Friend\' : \'New Friend\'}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.friendForm" class="form-horizontal" ng-submit="vm.save(vm.form.friendForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="name">Name</label>\n          <input name="name" type="text" ng-model="vm.friend.name" id="name" class="form-control" placeholder="Name" required>\n          <div ng-messages="vm.form.friendForm.name.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Friend name is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.friend._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/friends/views/list-friends.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Your Friends</h1>\n  </div>\n  <div class="list-group">\n    <a data-ng-repeat="friend in vm.friends"\n       data-ui-sref="friends.view({ friendId: friend._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span data-ng-bind="friend.created | date:\'mediumDate\'"></span>\n        by\n        <span data-ng-if="friend.user" data-ng-bind="friend.user.displayName"></span>\n        <span data-ng-if="!friend.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" data-ng-bind="friend.name"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" data-ng-if="vm.friends.$resolved && !vm.friends.length">\n    No Friends yet, why don\'t you <a data-ui-sref="friends.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/friends/views/view-friend.client.view.html",'<section>\n  <div class="page-header">\n    <h1 data-ng-bind="vm.friend.name"></h1>\n  </div>\n  <div class="pull-right"\n       data-ng-show="vm.friend.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       data-ui-sref="friends.edit({ friendId: vm.friend._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span data-ng-bind="vm.friend.created | date:\'mediumDate\'"></span>\n      by\n      <span data-ng-if="vm.friend.user"\n            data-ng-bind="vm.friend.user.displayName"></span>\n      <span data-ng-if="!vm.friend.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" data-ng-bind="vm.friend.content"></p>\n</section>\n'),$templateCache.put("modules/users/views/admin/edit-user.client.view.html",'<section>\n  <div class="page-header">\n    <h1>User <span ng-bind="user.username"></span></h1>\n  </div>\n  <div class="col-md-12">\n    <form name="userForm" ng-submit="update(userForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="user.firstName" placeholder="First Name" required />\n          <div ng-messages="userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="user.lastName" placeholder="Last Name" required />\n          <div ng-messages="userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="roles">Roles</label>\n          <div class="controls">\n            <input class="form-control" type="text" name="roles" ng-model="user.roles" id="roles" ng-list required />\n            <div ng-messages="userForm.roles.$error" role="alert">\n              <p class="help-block error-text" ng-message="required">At least one role is required.</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <input type="submit" value="Update" class="btn btn-default">\n        </div>\n        <div ng-show="error" class="text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/admin/list-users.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Users</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="search" placeholder="Search" ng-change="figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="user in pagedItems" ui-sref="admin.user({userId: user._id})" class="list-group-item">\n      <h4 class="list-group-item-heading" ng-bind="user.username"></h4>\n      <p class="list-group-item-text pull-right small" ng-bind="user.roles"></p>\n      <p class="list-group-item-text" ng-bind="user.email"></p>\n    </a>\n  </div>\n\n  <pagination boundary-links="true" max-size="8" items-per-page="itemsPerPage" total-items="filterLength" ng-model="currentPage" ng-change="pageChanged()"></pagination>\n</section>\n'),$templateCache.put("modules/users/views/admin/view-user.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="user.username"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.user-edit({userId: user._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="remove();" ng-if="user._id !== authentication.user._id">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>First Name</strong></div>\n        <div class="col-md-6" ng-bind="user.firstName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Last Name</strong></div>\n        <div class="col-md-6" ng-bind="user.lastName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Email</strong></div>\n        <div class="col-md-6" ng-bind="user.email"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Provider</strong></div>\n        <div class="col-md-6" ng-bind="user.provider"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Created</strong></div>\n        <div class="col-md-6" ng-bind="user.created"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Roles</strong></div>\n        <div class="col-md-6" ng-bind="user.roles"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Friends</strong></div>\n        <div class="col-md-6" ng-bind="user.friends"></div>\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/authentication/authentication.client.view.html",'<section class="row" ng-controller="AuthenticationController">\n  <h3 class="col-md-12 text-center">Sign in using your social accounts</h3>\n  <div class="col-md-12 text-center">\n    <img ng-click="callOauthProvider(\'/api/auth/facebook\')" ng-src="/modules/users/client/img/buttons/facebook.png">\n    <img ng-click="callOauthProvider(\'/api/auth/twitter\')" ng-src="/modules/users/client/img/buttons/twitter.png">\n    <img ng-click="callOauthProvider(\'/api/auth/google\')" ng-src="/modules/users/client/img/buttons/google.png">\n  </div>\n  <div ui-view></div>\n</section>\n'),$templateCache.put("modules/users/views/authentication/signin.client.view.html",'<div ng-controller="AuthenticationController">\n  <h3 class="col-md-12 text-center">Or with your account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="userForm" ng-submit="signin(userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\n          <div ng-messages="userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="credentials.password" placeholder="Password" required>\n          <div ng-messages="userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <alert type="danger" ng-show="error" class="text-center text-danger">\n          <span ng-bind="error"></span>\n        </alert>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/views/authentication/signup.client.view.html",'<div ng-controller="AuthenticationController">\n  <h3 class="col-md-12 text-center">Or sign up using your email</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="userForm" ng-submit="signup(userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="credentials.firstName" placeholder="First Name" required>\n          <div ng-messages="userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="credentials.lastName" placeholder="Last Name" required>\n          <div ng-messages="userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="credentials.email" placeholder="Email" lowercase required>\n          <div ng-messages="userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\n          <div ng-messages="userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n            <input type="password" id="password" name="password" class="form-control" ng-model="credentials.password" placeholder="Password" popover="{{popoverMsg}}" popover-trigger="focus" password-validator required>\n          <div ng-messages="userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="userForm.password.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!userForm.password.$error.required">\n          <label>Password Requirements</label>\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign up</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/views/password/forgot-password.client.view.html",'<section class="row" ng-controller="PasswordController">\n  <h3 class="col-md-12 text-center">Restore your password</h3>\n  <p class="small text-center">Enter your account username.</p>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\n    <form name="forgotPasswordForm" ng-submit="askForPasswordReset(forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\n          <div ng-messages="forgotPasswordForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a username.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Submit</button>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong ng-bind="success"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/password/reset-password-invalid.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password reset is invalid</h3>\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\n</section>\n'),$templateCache.put("modules/users/views/password/reset-password-success.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password successfully reset</h3>\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\n</section>\n'),$templateCache.put("modules/users/views/password/reset-password.client.view.html",'<section class="row" ng-controller="PasswordController">\n  <h3 class="col-md-12 text-center">Reset your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="resetPasswordForm" ng-submit="resetUserPassword(resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" popover="{{popoverMsg}}" popover-trigger="focus" popover-placement="top" password-validator required>\n          <div ng-messages="resetPasswordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="passwordDetails.newPassword" required>\n          <div ng-messages="resetPasswordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\n            <p class="help-block error-text" ng-show=resetPasswordForm.verifyPassword.$error.passwordVerify>Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!resetPasswordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Update Password</button>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong ng-bind="success"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/change-password.client.view.html",'<section class="row" ng-controller="ChangePasswordController">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="passwordForm" ng-submit="changeUserPassword(passwordForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="currentPassword">Current Password</label>\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="passwordDetails.currentPassword" placeholder="Current Password" required>\n          <div ng-messages="passwordForm.currentPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="passwordDetails.newPassword" placeholder="New Password" popover="{{popoverMsg}}" popover-trigger="focus" password-validator required>\n          <div ng-messages="passwordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="passwordDetails.newPassword" required>\n          <div ng-messages="passwordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\n            <p class="help-block error-text" ng-show=passwordForm.verifyPassword.$error.passwordVerify>Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!passwordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Password</button>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong>Password Changed Successfully</strong>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/change-profile-picture.client.view.html",'<section class="row" ng-controller="ChangeProfilePictureController">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\n    <form class="signin form-horizontal">\n      <fieldset>\n        <div class="form-group text-center">\n          <img ng-src="{{imageURL}}" alt="{{user.displayName}}" class="img-thumbnail user-profile-picture">\n        </div>\n        <div class="text-center form-group" ng-hide="uploader.queue.length">\n          <span class="btn btn-default btn-file">\n              Select Image <input type="file" nv-file-select uploader="uploader">\n          </span>\n        </div>\n        <div class="text-center form-group" ng-show="uploader.queue.length">\n          <button class="btn btn-primary" ng-click="uploadProfilePicture();">Upload</button>\n          <button class="btn btn-default" ng-click="cancelUpload();">Cancel</button>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong>Profile Picture Changed Successfully</strong>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/edit-profile.client.view.html",'<section class="row" ng-controller="EditProfileController">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="userForm" ng-submit="updateUserProfile(userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="user.firstName" placeholder="First Name" required>\n          <div ng-messages="userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="user.lastName" placeholder="Last Name" required>\n          <div ng-messages="userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="user.email" placeholder="Email" lowercase required>\n          <div ng-messages="userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="user.username" placeholder="Username" lowercase required>\n          <div ng-messages="userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Profile</button>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong>Profile Saved Successfully</strong>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),
$templateCache.put("modules/users/views/settings/manage-social-accounts.client.view.html",'<section class="row" ng-controller="SocialAccountsController">\n  <h3 class="col-md-12 text-center" ng-show="hasConnectedAdditionalSocialAccounts()">Connected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <div ng-repeat="(providerName, providerData) in user.additionalProvidersData" class="social-account-container">\n      <img ng-src="/modules/users/client/img/buttons/{{providerName}}.png">\n      <a class="btn btn-danger btn-remove-account" ng-click="removeUserSocialAccount(providerName)">\n        <i class="glyphicon glyphicon-trash"></i>\n      </a>\n    </div>\n  </div>\n  <h3 class="col-md-12 text-center" ng-show="hasConnectedAdditionalSocialAccounts()">Unconnected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'facebook\')">\n      <img ng-src="/modules/users/client/img/buttons/facebook.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/facebook" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'twitter\')">\n      <img ng-src="/modules/users/client/img/buttons/twitter.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/twitter" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'google\')">\n      <img ng-src="/modules/users/client/img/buttons/google.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/google" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'linkedin\')">\n      <img ng-src="/modules/users/client/img/buttons/linkedin.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/linkedin" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'github\')">\n      <img ng-src="/modules/users/client/img/buttons/github.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/github" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'paypal\')">\n      <img ng-src="/modules/users/client/img/buttons/paypal.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/paypal" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/settings.client.view.html",'<section ng-controller="SettingsController">\n  <div class="page-header">\n    <h1>Settings</h1>\n  </div>\n  <div class="row">\n    <nav class="col-sm-3 col-md-3">\n      <ul class="nav nav-pills nav-stacked">\n        <li ui-sref-active="active">\n          <a ui-sref="settings.profile">Edit Profile</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.picture">Change Profile Picture</a>\n        </li>\n        <li ui-sref-active="active" ng-show="user.provider === \'local\'">\n          <a ui-sref="settings.password">Change Password</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.accounts">Manage Social Accounts</a>\n        </li>\n      </ul>\n    </nav>\n    <div class="col-sm-9 col-md-8 settings-view">\n      <div ui-view></div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/user/user-directory.client.view.html",'<section ng-controller="UserDirectoryController">\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h2>Who would you like to chat with?</h2>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" autofocus type="text" ng-model="search" placeholder="Search" ng-change="figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n  <div class="list-group ng-hide" ng-show="search">\n\n    <style>\n    @import url("http://fonts.googleapis.com/css?family=Bree+Serif|Merriweather:400,300,700,900|Droid+Sans:400,700");\n\n    ul.pagination {\n      /*display: block;*/\n      margin: auto;\n      align-self: center;\n      align-items: center;\n      text-align: center;\n      border: 0;\n      outline: 0;\n    }\n\n    .list-group-item {\n      display: block;\n      text-align: center;\n      border: 0;\n      outline: 0;\n    }\n\n    .list-group-item img {\n      display: block;\n      float: left;\n      width: 80px;\n      outline: 0;\n      -webkit-border-radius: 12px;\n      border-radius: 12px;\n      margin-right: 10px;\n      margin-bottom: 10px;\n    }\n\n    .btn:hover {\n      background-color: #5F5980;\n      opacity: 1;\n      -webkit-transform: scale(1.2);\n      -moz-transform: scale(1.2);\n      -ms-transform: scale(1.2);\n      transform: scale(1.2);\n    }\n\n    .btn {\n        display: inline-block;\n        width: 50vh;\n        padding: 6px 12px;\n        margin-bottom: 0;\n        font-size: 1rem;\n        line-height: 140%;\n        text-align: center;\n        text-decoration: none;\n        white-space: nowrap;\n        vertical-align: middle;\n        cursor: pointer;\n        /*border: 0px solid transparent;*/\n        border-radius: 4px;\n        background: #DFDFDF;\n        color: #5F5980;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n             -o-user-select: none;\n                user-select: none;\n    }\n\n    .list-group-item h4 {\n      font-family: \'Bree Serif\', serif;\n      font-size: 20px;\n      display: block;\n      float: left;\n      padding-left: 60px !important;\n    }\n\n    .pagination {\n      align-items: center;\n      text-align: center !important;\n      margin: 0px !important;\n      float: none;\n    }\n    </style>\n\n    <pagination boundary-links="true" max-size="8" items-per-page="itemsPerPage" total-items="filterLength" ng-model="currentPage" ng-change="pageChanged()" class="pagination"></pagination>\n\n    <li ng-repeat="user in pagedSearchItems"\n    class="list-group-item">\n\n      <a ng-href="https://meet.jit.si/{{authentication.user.username}}meets{{user.username}}">\n      <button btn-link class="btn">\n      <img ng-src="{{user.profileImageURL}}" alt="{{user.displayname}}" />\n      <h4 class="list-group-item-heading" ng-bind="user.displayName" ></h4>\n      <h4 class="col-sm-6 text-left" ng-bind=user.online></h4>\n      <script>\n        socket.on(\'connected\', function (data) {\n          console.log(data.text);\n        });\n      </script>\n    </li>\n  </button>\n  </a>\n  </div>\n\n  <pagination boundary-links="true" max-size="8" items-per-page="itemsPerPage" total-items="filterLength" ng-model="currentPage" ng-change="pageChanged()" class="pagination" style="align-items: center;"></pagination>\n</section>\n')}angular.module("core").run(templates),templates.$inject=["$templateCache"]}();